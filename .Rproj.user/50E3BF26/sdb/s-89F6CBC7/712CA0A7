{
    "contents" : "## trim ped to include only F45-56.\nsetwd(\"C:/Users/Administrator/Desktop/Scripts/LgSm-DataProcessing/pedigree\")\nped=read.table(\"ailpedigree.csv\", sep=\",\", header=TRUE)\n\n# What line is the first mouse from F45 in?\nped[ped$id == \"39369.1\",]\nped[6700:6715,]\n\n# Trim ped to include only F45-56\npedtrim <- ped[6706:10173,]\n# remember to add --no-pheno when running ped\n\nwrite.table(file=\"ailped.45to56.ped\", sep=\"\\t\", \n            row.names=FALSE, col.names=FALSE, pedtrim)\n\n\n\n############### IDCOEF ##########################\n## prepare files for ped checking in Mark Abney's idcf software\n\nsetwd(\"C:/Users/Administrator/Desktop/Scripts/LgSm-DataProcessing/pedigree\")\n\n## create pedigree file ##\n\nped=read.table(\"ailpedigree.csv\", sep=\",\", header=TRUE, as.is=TRUE)\nf34ped <- read.table(\"pedigreeF34.csv\", sep=\" \", header=TRUE, as.is=TRUE)\n\nf2s <- f34ped[f34ped$generation == \"F2\",]\n\n# these F2 animals are listed in the AI_Line info F3 file rather than in the F2 file.\n# therefore they are out of order when the ped is generated in R.\n# i moved them to the correct lines (232-4) so I could replace their sire and dam ids with the corresponding ids in the F34 pedigree file (i.e. the pedigree file that was used in the 2009 Genetics paper). This file codes F1 parents as -9997 and -9996, and includes the F1 and F0 generations. \n\n# mice that were out of order:\nped[ped$id == \"1182\",]\nped[ped$id == \"1190\",]\nped[ped$id == \"1191\",]\n\nf34ped <- cbind(f34ped$id, f34ped$sire, f34ped$dam)\nped <- cbind(ped$id, ped$sire, ped$dam)\nped <- ped[-c(1:234),]\nped <- rbind(f34ped[1:238,], ped)\nhead(ped)\n\n# change F0 founders to id \"0\"\nped[1,1] <- 0\nped[2,1] <- 0 \nped[3, 2:3] <- 0\nped[4, 2:3] <- 0\nhead(ped)\nwrite.table(ped, file=\"ailpedforidcf.txt\", sep=\" \", row.names=FALSE, col.names=FALSE)\n\n\n## create study file ##\n\nsetwd(\"C:/Users/Administrator/Desktop/Scripts/LgSm-DataProcessing/dataFiles\")\ntestmice <- read.table(file=\"allData.txt\", sep=\"\\t\", header=TRUE)\n\nstudy <- as.data.frame(testmice$id)\nstudy <- study[1] - 0.1\nhead(study)\nwrite.table(study, file=\"studyfileidcf.txt\", sep=\" \", row.names=FALSE, col.names=FALSE)\n\n________________\n\n# idcf output spit out the following. These are animals from Cheverud generations. \n\n# Mother of 41095 not found in pedigree.\n# Father of 41095 not found in pedigree.\n# Father of 50924 not found in pedigree.\n# Mother of 51914 not found in pedigree.\n# Father of 51914 not found in pedigree.\n# Mother of 52016 not found in pedigree.\n# Father of 52016 not found in pedigree.\n\n\npedigree=read.table(\"ailpedigree.csv\", sep=\",\", header=TRUE, as.is=TRUE)\n\n# changing these unlisted parents to \"0\" for this purpose\n\nped2 <- as.data.frame(ped)\nnames(ped2)[1:3] <- c(\"id\", \"sire\", \"dam\")\n\nped2[ped2$id == \"41095\",]\nped2[3212, 2:3]<- 0\n\nped2[ped2$id == \"50924\",]\nped2[3867, 2:3]<- 0\n\nped2[ped2$id == \"51914\",]\nped2[4004, 2:3]<- 0\n\nped2[ped2$id == \"52016\",]\nped2[4005, 2:3]<- 0\n\n\nwrite.table(ped, file=\"ailpedforidcf.txt\", sep=\" \", row.names=FALSE, col.names=FALSE)\n\n\n### update: idcoef doesn't accept ids unless they're integers. i replaced all instances of \".1\" with \"0\" in the ped file. 0.1 was added to ids from F33 and beyond to avoid overlap with ids from Cheverud generations. all Cheverud ids are 5 digits or less, so I added additional zeros to make all ids form Palmer generations 6 digits long. Some are 7 digits because they already had an additonal zero added (e.g. to correct errors - see ped readme file). There were also two IDs from Cheverud generations that were inexplicably labeled \"50.219\" and \"51.224\". I changed these to \"5021900\" and \"5122400\", respectively. \n\n# testing to make sure it looks ok after saving in excel text format\ncheck <- read.table(file=\"ailpedforidcf.txt\", sep=\"\\t\")\nhead(check)\n\n# remove extra columns\ncheck <- check[1:3]\nhead(check)\nwrite.table(check, file=\"ailped.integer.txt\", sep=\" \", row.names=F, col.names=F)\n\nids<- read.table(file=\"studyfileidcf.txt\", sep=\" \")\nhead(ids)\n\n\n### ran idcoef again and it says that 1139 and 1140 must have both parents specified. In the AI Line Info_3 file, the sire of these siblings is listed as '?'. The dam's ID is 135. In the F2 line info file she's listed as \"Mated To 190*/?\" so these mice may be half siblings. Addl evidence for this (maybe, depending on how the Cheverud lab does weanings): 1139 and 1140 were weaned one day apart.\n\n\n\n### also, one parent of 543350 and 543300 (siblings) - 520950 - is not in the ped. this is because she was born late and given a placeholder id (670001.1) in the breeder code that was never changed to her real id, 52059. \n\ncheck[check[1] == \"543300\",]\ncheck[check[1] == \"6700010\",]\ncheck$V1[8725] <- 520950\n\n\n\n\n\n\n\n\n\n\n############ \n\n# clean workspace\n# rm(testmice, ped2, ped, ids, doesmatch, dof2smatch, nomatch, pedf2, pedigree)\n\nped=read.table(\"ailpedigree.csv\", sep=\",\", header=TRUE, as.is=TRUE)\nped34=read.table(\"pedigreeF34.csv\", sep=\" \", header=TRUE)\n\nlevels(ped34$sex)[levels(ped34$sex)==\"M\"] <- 1\nlevels(ped34$sex)[levels(ped34$sex)==\"F\"] <- 2\n\nfam = rep(1, 5647)\nped34 <- cbind(fam, ped34)\nped34 <- cbind(ped34[1:2], ped34[5:6], ped34[3])\nhead(ped34)\n\n# change F0 founders to id \"0\"\nped34[1,2] <- 0\nped34[2,2] <- 0 \nped34[3, 3:4] <- 0\nped34[4, 3:4] <- 0\n\n# pedigree for plink from F0 to F56\nped <- ped[-c(1:234),]\nped <- rbind(ped34[1:238,], ped)\nhead(ped)\nwrite.table(ped, file=\"fullpedforPlink.nonintegers.txt\", sep=\" \", row.names=F, col.names=F)\n\nped2=read.table(\"fullpedforPlink.nonintegers.txt\", sep=\" \", header=F, as.is=T)\nnames(ped2)<- names(ped)\n\n# now make all ids in the full ped integers by replacing id, dam and sire from line 4949 to the end of the data frame with values from 'check' \n\nped2[4949:10177, 2:4]<-check[4949:10177, 1:3]\n\nwrite.table(ped2, file=\"fullpedforPlink.integers.txt\", sep=\" \", row.names=F, col.names=F)\n\n\n############## get idcoefs from QTLRel ######################\n\n############ prepare pedigree files #################\n\n# 0 is reserved for missing values\n# change founder ids to -9999 and -9998 for sire and dam\nped2[1,2] <- -9999\nped2[2,2] <- -9998\nped2[3, 3:4] <- c(-9999,-9998)\nped2[4, 3:4] <- c(-9999, -9998)\n\n# need a pedigree with id, sire, dam, sex (1m/2f)\nped2$fam <- NULL\nped <- ped2\n\n# ped with \"parents not in prev generation\" errors uncorrected\nwrite.table(ped, file=\"qtlRel.ped.txt\", sep=\" \", row.names=F, col.names=F)\n\n\n###### corrections for unknown parents ##############\n# i.e. parents of mice below are not listed in prev gens\n# setting parents of 51914 and 52016 to 0,0\nped[4004, 2:3]<- 0 \nped[4005, 2:3]<- 0\n\n# setting mother of 50924 to 0\nped[3867, 3]<- 0\n\n# setting parents of 41095 (the alleged offspring of B6) to 0,0\nped[3212, 2:3]<- 0\n\n# setting father of 1139 and 1140 to 0\nped[293:294, 2]<-0\n\n# ped where unknown parents are set to 0 \nwrite.table(ped, file=\"qtlRel.ped.txt\", sep=\" \", row.names=F, col.names=F)\n\n################## id file ########################\n\n# ids of mice for which to calculate idcoefs\ntestmice <- read.table(\"studyfileidcf.txt\", sep=\"\\t\", header=F, as.is=T)\nnames(testmice)[1]<-\"id\"\n\n\n\n\n\n",
    "created" : 1425585011748.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2633297826",
    "id" : "712CA0A7",
    "lastKnownWriteTime" : 1424206056,
    "path" : "C:/Users/Administrator/Desktop/Scripts/LgSm-DataProcessing/pedigree/modifyPedforVariousPrograms.R",
    "project_path" : "pedigree/modifyPedforVariousPrograms.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}